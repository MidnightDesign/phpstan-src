parameters:
	customRulesetUsed: false

autowiredAttributeServices:
	# registers rules with #[RegisteredRule] attribute
	level: 0

conditionalTags:
	PHPStan\Rules\InternalTag\RestrictedInternalClassConstantUsageExtension:
		phpstan.restrictedClassConstantUsageExtension: %featureToggles.internalTag%
	PHPStan\Rules\InternalTag\RestrictedInternalClassNameUsageExtension:
		phpstan.restrictedClassNameUsageExtension: %featureToggles.internalTag%
	PHPStan\Rules\InternalTag\RestrictedInternalFunctionUsageExtension:
		phpstan.restrictedFunctionUsageExtension: %featureToggles.internalTag%
	PHPStan\Rules\Classes\NewStaticInAbstractClassStaticMethodRule:
		phpstan.rules.rule: %featureToggles.newStaticInAbstractClassStaticMethod%

services:
	-
		class: PHPStan\Rules\Classes\ExistingClassInClassExtendsRule
		tags:
			- phpstan.rules.rule
		arguments:
			discoveringSymbolsTip: %tips.discoveringSymbols%

	-
		class: PHPStan\Rules\Classes\ExistingClassesInClassImplementsRule
		tags:
			- phpstan.rules.rule
		arguments:
			discoveringSymbolsTip: %tips.discoveringSymbols%

	-
		class: PHPStan\Rules\Classes\ExistingClassesInEnumImplementsRule
		tags:
			- phpstan.rules.rule
		arguments:
			discoveringSymbolsTip: %tips.discoveringSymbols%

	-
		class: PHPStan\Rules\Classes\ExistingClassInInstanceOfRule
		tags:
			- phpstan.rules.rule
		arguments:
			checkClassCaseSensitivity: %checkClassCaseSensitivity%
			discoveringSymbolsTip: %tips.discoveringSymbols%

	-
		class: PHPStan\Rules\Classes\ExistingClassesInInterfaceExtendsRule
		tags:
			- phpstan.rules.rule
		arguments:
			discoveringSymbolsTip: %tips.discoveringSymbols%

	-
		class: PHPStan\Rules\Classes\ExistingClassInTraitUseRule
		tags:
			- phpstan.rules.rule
		arguments:
			discoveringSymbolsTip: %tips.discoveringSymbols%

	-
		class: PHPStan\Rules\Classes\InstantiationRule
		tags:
			- phpstan.rules.rule
		arguments:
			discoveringSymbolsTip: %tips.discoveringSymbols%

	-
		class: PHPStan\Rules\Exceptions\CaughtExceptionExistenceRule
		tags:
			- phpstan.rules.rule
		arguments:
			checkClassCaseSensitivity: %checkClassCaseSensitivity%
			discoveringSymbolsTip: %tips.discoveringSymbols%

	-
		class: PHPStan\Rules\Functions\CallToNonExistentFunctionRule
		tags:
			- phpstan.rules.rule
		arguments:
			checkFunctionNameCase: %checkFunctionNameCase%
			discoveringSymbolsTip: %tips.discoveringSymbols%

	-
		class: PHPStan\Rules\Classes\NewStaticInAbstractClassStaticMethodRule

	-
		class: PHPStan\Rules\Constants\OverridingConstantRule
		arguments:
			checkPhpDocMethodSignatures: %checkPhpDocMethodSignatures%
		tags:
			- phpstan.rules.rule

	-
		class: PHPStan\Rules\Methods\OverridingMethodRule
		arguments:
			checkPhpDocMethodSignatures: %checkPhpDocMethodSignatures%
			checkMissingOverrideMethodAttribute: %checkMissingOverrideMethodAttribute%
		tags:
			- phpstan.rules.rule


	-
		class: PHPStan\Rules\Missing\MissingReturnRule
		arguments:
			checkExplicitMixedMissingReturn: %checkExplicitMixedMissingReturn%
			checkPhpDocMissingReturn: %checkPhpDocMissingReturn%
		tags:
			- phpstan.rules.rule

	-
		class: PHPStan\Rules\Namespaces\ExistingNamesInGroupUseRule
		tags:
			- phpstan.rules.rule
		arguments:
			checkFunctionNameCase: %checkFunctionNameCase%
			discoveringSymbolsTip: %tips.discoveringSymbols%

	-
		class: PHPStan\Rules\Namespaces\ExistingNamesInUseRule
		tags:
			- phpstan.rules.rule
		arguments:
			checkFunctionNameCase: %checkFunctionNameCase%
			discoveringSymbolsTip: %tips.discoveringSymbols%

	-
		class: PHPStan\Rules\Properties\AccessPropertiesRule
		tags:
			- phpstan.rules.rule

	-
		class: PHPStan\Rules\Properties\AccessStaticPropertiesRule
		tags:
			- phpstan.rules.rule
		arguments:
			discoveringSymbolsTip: %tips.discoveringSymbols%

	-
		class: PHPStan\Rules\Properties\ExistingClassesInPropertiesRule
		tags:
			- phpstan.rules.rule
		arguments:
			checkClassCaseSensitivity: %checkClassCaseSensitivity%
			checkThisOnly: %checkThisOnly%
			discoveringSymbolsTip: %tips.discoveringSymbols%

	-
		class: PHPStan\Rules\Functions\FunctionCallableRule
		arguments:
			checkFunctionNameCase: %checkFunctionNameCase%
			reportMaybes: %reportMaybes%
		tags:
			- phpstan.rules.rule

	-
		class: PHPStan\Rules\Properties\OverridingPropertyRule
		arguments:
			checkPhpDocMethodSignatures: %checkPhpDocMethodSignatures%
			reportMaybes: %reportMaybesInPropertyPhpDocTypes%
		tags:
			- phpstan.rules.rule

	-
		class: PHPStan\Rules\Properties\SetPropertyHookParameterRule
		arguments:
			checkPhpDocMethodSignatures: %checkPhpDocMethodSignatures%
			checkMissingTypehints: %checkMissingTypehints%
		tags:
			- phpstan.rules.rule

	-
		class: PHPStan\Rules\Properties\WritingToReadOnlyPropertiesRule
		arguments:
			checkThisOnly: %checkThisOnly%
		tags:
			- phpstan.rules.rule

	-
		class: PHPStan\Rules\Properties\ReadingWriteOnlyPropertiesRule
		arguments:
			checkThisOnly: %checkThisOnly%
		tags:
			- phpstan.rules.rule

	-
		class: PHPStan\Rules\Variables\CompactVariablesRule
		arguments:
			checkMaybeUndefinedVariables: %checkMaybeUndefinedVariables%
		tags:
			- phpstan.rules.rule

	-
		class: PHPStan\Rules\Variables\DefinedVariableRule
		arguments:
			cliArgumentsVariablesRegistered: %cliArgumentsVariablesRegistered%
			checkMaybeUndefinedVariables: %checkMaybeUndefinedVariables%
		tags:
			- phpstan.rules.rule

	-
		class: PHPStan\Rules\Keywords\RequireFileExistsRule
		arguments:
			currentWorkingDirectory: %currentWorkingDirectory%
		tags:
			- phpstan.rules.rule

	-
		class: PHPStan\Rules\InternalTag\RestrictedInternalClassConstantUsageExtension

	-
		class: PHPStan\Rules\InternalTag\RestrictedInternalClassNameUsageExtension

	-
		class: PHPStan\Rules\InternalTag\RestrictedInternalFunctionUsageExtension
