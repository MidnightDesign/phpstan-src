--- Formatter/OutputFormatter.php
+++ Formatter/OutputFormatter.php
@@ -12,6 +12,7 @@
 namespace Symfony\Component\Console\Formatter;

 use Symfony\Component\Console\Exception\InvalidArgumentException;
+use Symfony\Component\Console\Helper\Helper;

 use function Symfony\Component\String\b;

@@ -160,9 +161,11 @@ class OutputFormatter implements WrappableOutputFormatterInterface
                 continue;
             }

+            // convert byte position to character position.
+            $pos = Helper::length(substr($message, 0, $pos));
             // add the text up to the next tag
-            $output .= $this->applyCurrentStyle(substr($message, $offset, $pos - $offset), $output, $width, $currentLineLength);
-            $offset = $pos + \strlen($text);
+            $output .= $this->applyCurrentStyle(Helper::substr($message, $offset, $pos - $offset), $output, $width, $currentLineLength);
+            $offset = $pos + Helper::length($text);

             // opening tag?
             if ($open = '/' != $text[1]) {
@@ -183,7 +186,7 @@ class OutputFormatter implements WrappableOutputFormatterInterface
             }
         }

-        $output .= $this->applyCurrentStyle(substr($message, $offset), $output, $width, $currentLineLength);
+        $output .= $this->applyCurrentStyle(Helper::substr($message, $offset), $output, $width, $currentLineLength);

         return strtr($output, ["\0" => '\\', '\\<' => '<', '\\>' => '>']);
     }
@@ -253,8 +256,20 @@ class OutputFormatter implements WrappableOutputFormatterInterface
         }

         if ($currentLineLength) {
-            $prefix = substr($text, 0, $i = $width - $currentLineLength)."\n";
-            $text = substr($text, $i);
+            $lines = explode("\n", $text, 2);
+            $prefix = Helper::substr($lines[0], 0, $i = $width - $currentLineLength)."\n";
+            $text = Helper::substr($lines[0], $i);
+
+            if (isset($lines[1])) {
+                // $prefix may contain the full first line in which the \n is already a part of $prefix.
+                if ('' !== $text) {
+                    $text .= "\n";
+                }
+
+                $text .= $lines[1];
+            }
+
+            unset($lines);
         } else {
             $prefix = '';
         }
@@ -269,8 +284,8 @@ class OutputFormatter implements WrappableOutputFormatterInterface

         $lines = explode("\n", $text);

-        foreach ($lines as $line) {
-            $currentLineLength += \strlen($line);
+        foreach ($lines as $i => $line) {
+            $currentLineLength = 0 === $i ? $currentLineLength + Helper::length($line) : Helper::length($line);
             if ($width <= $currentLineLength) {
                 $currentLineLength = 0;
             }
--- Helper/Helper.php
+++ Helper/Helper.php
@@ -100,6 +100,14 @@ abstract class Helper implements HelperInterface
     {
         $string ?? $string = '';

+        if (preg_match('//u', $string)) {
+            $result = grapheme_substr((new UnicodeString($string))->toString(), $from, $length);
+
+            return false === $result
+                ? ''
+                : $result;
+        }
+
         if (false === $encoding = mb_detect_encoding($string, null, true)) {
             return substr($string, $from, $length);
         }
