parameters:
	ignoreErrors:
		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: build/PHPStan/Build/ContainerDynamicReturnTypeExtension.php

		-
			rawMessage: 'Method PHPStan\Analyser\AnalyserResultFinalizer::finalize() throws checked exception Throwable but it''s missing from the PHPDoc @throws tag.'
			identifier: missingType.checkedException
			count: 1
			path: src/Analyser/AnalyserResultFinalizer.php

		-
			rawMessage: Cannot assign offset 'realCount' to array<mixed>|string.
			identifier: offsetAssign.dimType
			count: 1
			path: src/Analyser/Ignore/IgnoredErrorHelperResult.php

		-
			rawMessage: Casting to string something that's already string.
			identifier: cast.useless
			count: 3
			path: src/Analyser/MutatingScope.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Analyser/MutatingScope.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Analyser/MutatingScope.php

		-
			rawMessage: 'Only numeric types are allowed in pre-increment, float|int|string|null given.'
			identifier: preInc.nonNumeric
			count: 1
			path: src/Analyser/MutatingScope.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Analyser/NodeScopeResolver.php

		-
			rawMessage: 'Parameter #2 $node of method PHPStan\BetterReflection\SourceLocator\Ast\Strategy\NodeToReflection::__invoke() expects PhpParser\Node\Expr\ArrowFunction|PhpParser\Node\Expr\Closure|PhpParser\Node\Expr\FuncCall|PhpParser\Node\Stmt\Class_|PhpParser\Node\Stmt\Const_|PhpParser\Node\Stmt\Enum_|PhpParser\Node\Stmt\Function_|PhpParser\Node\Stmt\Interface_|PhpParser\Node\Stmt\Trait_, PhpParser\Node\Stmt\ClassLike given.'
			identifier: argument.type
			count: 1
			path: src/Analyser/NodeScopeResolver.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Analyser/RicherScopeGetTypeHelper.php

		-
			rawMessage: 'Call to method __construct() of internal class PhpParser\Internal\TokenStream from outside its root namespace PhpParser.'
			identifier: method.internalClass
			count: 1
			path: src/Analyser/RuleErrorTransformer.php

		-
			rawMessage: Instantiation of internal class PhpParser\Internal\TokenStream.
			identifier: new.internalClass
			count: 1
			path: src/Analyser/RuleErrorTransformer.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Analyser/TypeSpecifier.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 5
			path: src/Analyser/TypeSpecifier.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Analyser/TypeSpecifier.php

		-
			rawMessage: 'Template type TNodeType is declared as covariant, but occurs in contravariant position in parameter node of method PHPStan\Collectors\Collector::processNode().'
			identifier: generics.variance
			count: 1
			path: src/Collectors/Collector.php

		-
			rawMessage: 'Method PHPStan\Collectors\Registry::__construct() has parameter $collectors with generic interface PHPStan\Collectors\Collector but does not specify its types: TNodeType, TValue'
			identifier: missingType.generics
			count: 1
			path: src/Collectors/Registry.php

		-
			rawMessage: 'Property PHPStan\Collectors\Registry::$cache with generic interface PHPStan\Collectors\Collector does not specify its types: TNodeType, TValue'
			identifier: missingType.generics
			count: 1
			path: src/Collectors/Registry.php

		-
			rawMessage: 'Property PHPStan\Collectors\Registry::$collectors with generic interface PHPStan\Collectors\Collector does not specify its types: TNodeType, TValue'
			identifier: missingType.generics
			count: 1
			path: src/Collectors/Registry.php

		-
			rawMessage: Anonymous function has an unused use $container.
			identifier: closure.unusedUse
			count: 1
			path: src/Command/CommandHelper.php

		-
			rawMessage: 'Call to static method expand() of internal class Nette\DI\Helpers from outside its root namespace Nette.'
			identifier: staticMethod.internalClass
			count: 2
			path: src/Command/CommandHelper.php

		-
			rawMessage: 'Parameter #1 $path of function dirname expects string, string|false given.'
			identifier: argument.type
			count: 1
			path: src/Command/CommandHelper.php

		-
			rawMessage: 'Static property PHPStan\Command\CommandHelper::$reservedMemory is never read, only written.'
			identifier: property.onlyWritten
			count: 1
			path: src/Command/CommandHelper.php

		-
			rawMessage: 'Call to static method escape() of internal class Nette\DI\Helpers from outside its root namespace Nette.'
			identifier: staticMethod.internalClass
			count: 4
			path: src/Command/ErrorFormatter/BaselineNeonErrorFormatter.php

		-
			rawMessage: 'Call to static method escape() of internal class Nette\DI\Helpers from outside its root namespace Nette.'
			identifier: staticMethod.internalClass
			count: 5
			path: src/Command/ErrorFormatter/BaselinePhpErrorFormatter.php

		-
			rawMessage: 'Parameter #1 $headers (array<string>) of method PHPStan\Command\ErrorsConsoleStyle::table() should be contravariant with parameter $headers (array) of method Symfony\Component\Console\Style\StyleInterface::table()'
			identifier: method.childParameterType
			count: 1
			path: src/Command/ErrorsConsoleStyle.php

		-
			rawMessage: 'Parameter #1 $headers (array<string>) of method PHPStan\Command\ErrorsConsoleStyle::table() should be contravariant with parameter $headers (array) of method Symfony\Component\Console\Style\SymfonyStyle::table()'
			identifier: method.childParameterType
			count: 1
			path: src/Command/ErrorsConsoleStyle.php

		-
			rawMessage: 'Parameter #2 $rows (array<array<string>>) of method PHPStan\Command\ErrorsConsoleStyle::table() should be contravariant with parameter $rows (array) of method Symfony\Component\Console\Style\StyleInterface::table()'
			identifier: method.childParameterType
			count: 1
			path: src/Command/ErrorsConsoleStyle.php

		-
			rawMessage: 'Parameter #2 $rows (array<array<string>>) of method PHPStan\Command\ErrorsConsoleStyle::table() should be contravariant with parameter $rows (array) of method Symfony\Component\Console\Style\SymfonyStyle::table()'
			identifier: method.childParameterType
			count: 1
			path: src/Command/ErrorsConsoleStyle.php

		-
			rawMessage: 'Call to static method escape() of internal class Nette\DI\Helpers from outside its root namespace Nette.'
			identifier: staticMethod.internalClass
			count: 1
			path: src/DependencyInjection/AutowiredAttributeServicesExtension.php

		-
			rawMessage: 'Call to static method expand() of internal class Nette\DI\Helpers from outside its root namespace Nette.'
			identifier: staticMethod.internalClass
			count: 2
			path: src/DependencyInjection/AutowiredAttributeServicesExtension.php

		-
			rawMessage: 'Call to static method expand() of internal class Nette\DI\Helpers from outside its root namespace Nette.'
			identifier: staticMethod.internalClass
			count: 1
			path: src/DependencyInjection/ContainerFactory.php

		-
			rawMessage: 'Call to static method merge() of internal class Nette\Schema\Helpers from outside its root namespace Nette.'
			identifier: staticMethod.internalClass
			count: 2
			path: src/DependencyInjection/ContainerFactory.php

		-
			rawMessage: Variable method call on Nette\Schema\Elements\AnyOf|Nette\Schema\Elements\Structure|Nette\Schema\Elements\Type.
			identifier: method.dynamicName
			count: 1
			path: src/DependencyInjection/ContainerFactory.php

		-
			rawMessage: Variable static method call on Nette\Schema\Expect.
			identifier: staticMethod.dynamicName
			count: 1
			path: src/DependencyInjection/ContainerFactory.php

		-
			rawMessage: Fetching class constant PREVENT_MERGING of deprecated class Nette\DI\Config\Helpers.
			identifier: classConstant.deprecatedClass
			count: 1
			path: src/DependencyInjection/NeonAdapter.php

		-
			rawMessage: Creating new ReflectionClass is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine. Use objects retrieved from ReflectionProvider instead.
			identifier: phpstanApi.runtimeReflection
			count: 1
			path: src/Diagnose/PHPStanDiagnoseExtension.php

		-
			rawMessage: 'Parameter #1 $path of function dirname expects string, string|false given.'
			identifier: argument.type
			count: 1
			path: src/Diagnose/PHPStanDiagnoseExtension.php

		-
			rawMessage: 'Call to method getContent() of internal class PhpMerge\internal\Line from outside its root namespace PhpMerge.'
			identifier: method.internalClass
			count: 2
			path: src/Fixable/Patcher.php

		-
			rawMessage: 'Call to static method createArray() of internal class PhpMerge\internal\Hunk from outside its root namespace PhpMerge.'
			identifier: staticMethod.internalClass
			count: 2
			path: src/Fixable/Patcher.php

		-
			rawMessage: 'Call to static method createArray() of internal class PhpMerge\internal\Line from outside its root namespace PhpMerge.'
			identifier: staticMethod.internalClass
			count: 5
			path: src/Fixable/Patcher.php

		-
			rawMessage: 'Call to method getTokenCode() of internal class PhpParser\Internal\TokenStream from outside its root namespace PhpParser.'
			identifier: method.internalClass
			count: 1
			path: src/Fixable/PhpPrinterIndentationDetectorVisitor.php

		-
			rawMessage: 'Parameter $origTokens of method PHPStan\Fixable\PhpPrinterIndentationDetectorVisitor::__construct() has typehint with internal class PhpParser\Internal\TokenStream.'
			identifier: parameter.internalClass
			count: 1
			path: src/Fixable/PhpPrinterIndentationDetectorVisitor.php

		-
			rawMessage: Property $origTokens references internal class PhpParser\Internal\TokenStream in its type.
			identifier: property.internalClass
			count: 1
			path: src/Fixable/PhpPrinterIndentationDetectorVisitor.php

		-
			rawMessage: Access to property $id of internal class Symfony\Polyfill\Php80\PhpToken from outside its root namespace Symfony.
			identifier: property.internalClass
			count: 1
			path: src/Parser/RichParser.php

		-
			rawMessage: Access to property $line of internal class Symfony\Polyfill\Php80\PhpToken from outside its root namespace Symfony.
			identifier: property.internalClass
			count: 4
			path: src/Parser/RichParser.php

		-
			rawMessage: Access to property $text of internal class Symfony\Polyfill\Php80\PhpToken from outside its root namespace Symfony.
			identifier: property.internalClass
			count: 3
			path: src/Parser/RichParser.php

		-
			rawMessage: 'Call to function method_exists() with PHPStan\PhpDocParser\Ast\PhpDoc\PhpDocNode and ''getParamOutTypeTagV…'' will always evaluate to true.'
			identifier: function.alreadyNarrowedType
			count: 1
			path: src/PhpDoc/PhpDocNodeResolver.php

		-
			rawMessage: 'Call to function method_exists() with PHPStan\PhpDocParser\Ast\PhpDoc\PhpDocNode and ''getSelfOutTypeTagVa…'' will always evaluate to true.'
			identifier: function.alreadyNarrowedType
			count: 1
			path: src/PhpDoc/PhpDocNodeResolver.php

		-
			rawMessage: 'Method PHPStan\PhpDoc\ResolvedPhpDocBlock::getNameScope() should return PHPStan\Analyser\NameScope but returns PHPStan\Analyser\NameScope|null.'
			identifier: return.type
			count: 1
			path: src/PhpDoc/ResolvedPhpDocBlock.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ArrayType is error-prone and deprecated. Use Type::isArray() or Type::getArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/PhpDoc/TypeNodeResolver.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\CallableType is error-prone and deprecated. Use Type::isCallable() and Type::getCallableParametersAcceptors() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/PhpDoc/TypeNodeResolver.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/PhpDoc/TypeNodeResolver.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/PhpDoc/TypeNodeResolver.php

		-
			rawMessage: Doing instanceof PHPStan\Type\Generic\GenericObjectType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/PhpDoc/TypeNodeResolver.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\IterableType is error-prone and deprecated. Use Type::isIterable() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/PhpDoc/TypeNodeResolver.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectType is error-prone and deprecated. Use Type::isObject() or Type::getObjectClassNames() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/PhpDoc/TypeNodeResolver.php

		-
			rawMessage: Dead catch - PHPStan\BetterReflection\Identifier\Exception\InvalidIdentifierName is never thrown in the try block.
			identifier: catch.neverThrown
			count: 4
			path: src/Reflection/BetterReflection/BetterReflectionProvider.php

		-
			rawMessage: Dead catch - PHPStan\BetterReflection\NodeCompiler\Exception\UnableToCompileNode is never thrown in the try block.
			identifier: catch.neverThrown
			count: 1
			path: src/Reflection/BetterReflection/BetterReflectionProvider.php

		-
			rawMessage: Creating new ReflectionClass is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine. Use objects retrieved from ReflectionProvider instead.
			identifier: phpstanApi.runtimeReflection
			count: 1
			path: src/Reflection/BetterReflection/SourceLocator/AutoloadSourceLocator.php

		-
			rawMessage: Creating new ReflectionFunction is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine. Use objects retrieved from ReflectionProvider instead.
			identifier: phpstanApi.runtimeReflection
			count: 1
			path: src/Reflection/BetterReflection/SourceLocator/AutoloadSourceLocator.php

		-
			rawMessage: 'Parameter #2 $node of method PHPStan\BetterReflection\SourceLocator\Ast\Strategy\NodeToReflection::__invoke() expects PhpParser\Node\Expr\ArrowFunction|PhpParser\Node\Expr\Closure|PhpParser\Node\Expr\FuncCall|PhpParser\Node\Stmt\Class_|PhpParser\Node\Stmt\Const_|PhpParser\Node\Stmt\Enum_|PhpParser\Node\Stmt\Function_|PhpParser\Node\Stmt\Interface_|PhpParser\Node\Stmt\Trait_, PhpParser\Node\Stmt\ClassLike given.'
			identifier: argument.type
			count: 1
			path: src/Reflection/BetterReflection/SourceLocator/AutoloadSourceLocator.php

		-
			rawMessage: 'Method PHPStan\Reflection\BetterReflection\SourceLocator\FileReadTrapStreamWrapper::invokeWithRealFileStreamWrapper() has parameter $cb with no signature specified for callable.'
			identifier: missingType.callable
			count: 1
			path: src/Reflection/BetterReflection/SourceLocator/FileReadTrapStreamWrapper.php

		-
			rawMessage: 'Parameter #2 $node of method PHPStan\BetterReflection\SourceLocator\Ast\Strategy\NodeToReflection::__invoke() expects PhpParser\Node\Expr\ArrowFunction|PhpParser\Node\Expr\Closure|PhpParser\Node\Expr\FuncCall|PhpParser\Node\Stmt\Class_|PhpParser\Node\Stmt\Const_|PhpParser\Node\Stmt\Enum_|PhpParser\Node\Stmt\Function_|PhpParser\Node\Stmt\Interface_|PhpParser\Node\Stmt\Trait_, PhpParser\Node\Expr\FuncCall|PhpParser\Node\Stmt\ClassLike|PhpParser\Node\Stmt\Const_|PhpParser\Node\Stmt\Function_ given.'
			identifier: argument.type
			count: 1
			path: src/Reflection/BetterReflection/SourceLocator/OptimizedDirectorySourceLocator.php

		-
			rawMessage: 'Parameter #2 $node of method PHPStan\BetterReflection\SourceLocator\Ast\Strategy\NodeToReflection::__invoke() expects PhpParser\Node\Expr\ArrowFunction|PhpParser\Node\Expr\Closure|PhpParser\Node\Expr\FuncCall|PhpParser\Node\Stmt\Class_|PhpParser\Node\Stmt\Const_|PhpParser\Node\Stmt\Enum_|PhpParser\Node\Stmt\Function_|PhpParser\Node\Stmt\Interface_|PhpParser\Node\Stmt\Trait_, PhpParser\Node\Stmt\ClassLike given.'
			identifier: argument.type
			count: 2
			path: src/Reflection/BetterReflection/SourceLocator/OptimizedSingleFileSourceLocator.php

		-
			rawMessage: Creating new ReflectionClass is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine. Use objects retrieved from ReflectionProvider instead.
			identifier: phpstanApi.runtimeReflection
			count: 1
			path: src/Reflection/BetterReflection/SourceLocator/ReflectionClassSourceLocator.php

		-
			rawMessage: Creating new ReflectionClass is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine. Use objects retrieved from ReflectionProvider instead.
			identifier: phpstanApi.runtimeReflection
			count: 1
			path: src/Reflection/BetterReflection/SourceLocator/RewriteClassAliasSourceLocator.php

		-
			rawMessage: Creating new ReflectionClass is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine. Use objects retrieved from ReflectionProvider instead.
			identifier: phpstanApi.runtimeReflection
			count: 1
			path: src/Reflection/BetterReflection/SourceLocator/SkipClassAliasSourceLocator.php

		-
			rawMessage: '''
				Call to deprecated method isSubclassOf() of class PHPStan\Reflection\ClassReflection:
				Use isSubclassOfClass instead.
			'''
			identifier: method.deprecated
			count: 1
			path: src/Reflection/ClassReflection.php

		-
			rawMessage: Doing instanceof PHPStan\Type\Generic\GenericObjectType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Reflection/ClassReflection.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectType is error-prone and deprecated. Use Type::isObject() or Type::getObjectClassNames() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Reflection/ClassReflection.php

		-
			rawMessage: 'Method PHPStan\Reflection\ClassReflection::getCacheKey() should return string but returns string|null.'
			identifier: return.type
			count: 1
			path: src/Reflection/ClassReflection.php

		-
			rawMessage: Binary operation "&" between bool|float|int|string|null and bool|float|int|string|null results in an error.
			identifier: binaryOp.invalid
			count: 1
			path: src/Reflection/InitializerExprTypeResolver.php

		-
			rawMessage: Binary operation "*" between bool|float|int|string|null and bool|float|int|string|null results in an error.
			identifier: binaryOp.invalid
			count: 1
			path: src/Reflection/InitializerExprTypeResolver.php

		-
			rawMessage: Binary operation "+" between bool|float|int|string|null and bool|float|int|string|null results in an error.
			identifier: binaryOp.invalid
			count: 1
			path: src/Reflection/InitializerExprTypeResolver.php

		-
			rawMessage: Binary operation "-" between bool|float|int|string|null and bool|float|int|string|null results in an error.
			identifier: binaryOp.invalid
			count: 1
			path: src/Reflection/InitializerExprTypeResolver.php

		-
			rawMessage: Binary operation "^" between bool|float|int|string|null and bool|float|int|string|null results in an error.
			identifier: binaryOp.invalid
			count: 1
			path: src/Reflection/InitializerExprTypeResolver.php

		-
			rawMessage: Binary operation "|" between bool|float|int|string|null and bool|float|int|string|null results in an error.
			identifier: binaryOp.invalid
			count: 1
			path: src/Reflection/InitializerExprTypeResolver.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 22
			path: src/Reflection/InitializerExprTypeResolver.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Reflection/InitializerExprTypeResolver.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Reflection/InitializerExprTypeResolver.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 10
			path: src/Reflection/InitializerExprTypeResolver.php

		-
			rawMessage: PHPDoc tag @var with type float|int is not subtype of native type int.
			identifier: varTag.nativeType
			count: 1
			path: src/Reflection/InitializerExprTypeResolver.php

		-
			rawMessage: PHPDoc tag @var with type float|int is not subtype of type int.
			identifier: varTag.type
			count: 4
			path: src/Reflection/InitializerExprTypeResolver.php

		-
			rawMessage: PHPDoc tag @var with type float|int|null is not subtype of type int|null.
			identifier: varTag.type
			count: 6
			path: src/Reflection/InitializerExprTypeResolver.php

		-
			rawMessage: Creating new PHPStan\Php8StubsMap is not covered by backward compatibility promise. The class might change in a minor PHPStan version.
			identifier: phpstanApi.constructor
			count: 1
			path: src/Reflection/SignatureMap/Php8SignatureMapProvider.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Rules/Classes/ImpossibleInstanceOfRule.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectType is error-prone and deprecated. Use Type::isObject() or Type::getObjectClassNames() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Rules/Classes/RequireImplementsRule.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 6
			path: src/Rules/Comparison/BooleanAndConstantConditionRule.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Rules/Comparison/BooleanNotConstantConditionRule.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 6
			path: src/Rules/Comparison/BooleanOrConstantConditionRule.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Rules/Comparison/DoWhileLoopConstantConditionRule.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Rules/Comparison/ElseIfConstantConditionRule.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Rules/Comparison/IfConstantConditionRule.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Rules/Comparison/ImpossibleCheckTypeHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Rules/Comparison/ImpossibleCheckTypeHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Rules/Comparison/ImpossibleCheckTypeHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\TypeWithClassName is error-prone and deprecated. Use Type::getObjectClassNames() or Type::getObjectClassReflections() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Rules/Comparison/ImpossibleCheckTypeHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Rules/Comparison/LogicalXorConstantConditionRule.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Rules/Comparison/MatchExpressionRule.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Rules/Comparison/NumberComparisonOperatorsConstantConditionRule.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Rules/Comparison/StrictComparisonOfDifferentTypesRule.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Rules/Comparison/TernaryOperatorConstantConditionRule.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Rules/Comparison/WhileLoopAlwaysFalseConditionRule.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Rules/Comparison/WhileLoopAlwaysTrueConditionRule.php

		-
			rawMessage: 'Function class_implements() is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine. Use objects retrieved from ReflectionProvider instead.'
			identifier: phpstanApi.runtimeReflection
			count: 1
			path: src/Rules/DirectRegistry.php

		-
			rawMessage: 'Function class_parents() is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine. Use objects retrieved from ReflectionProvider instead.'
			identifier: phpstanApi.runtimeReflection
			count: 1
			path: src/Rules/DirectRegistry.php

		-
			rawMessage: 'Method PHPStan\Rules\DirectRegistry::__construct() has parameter $rules with generic interface PHPStan\Rules\Rule but does not specify its types: TNodeType'
			identifier: missingType.generics
			count: 1
			path: src/Rules/DirectRegistry.php

		-
			rawMessage: 'Property PHPStan\Rules\DirectRegistry::$cache with generic interface PHPStan\Rules\Rule does not specify its types: TNodeType'
			identifier: missingType.generics
			count: 1
			path: src/Rules/DirectRegistry.php

		-
			rawMessage: 'Property PHPStan\Rules\DirectRegistry::$rules with generic interface PHPStan\Rules\Rule does not specify its types: TNodeType'
			identifier: missingType.generics
			count: 1
			path: src/Rules/DirectRegistry.php

		-
			rawMessage: Doing instanceof PHPStan\Type\Generic\GenericObjectType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Rules/Generics/GenericAncestorsCheck.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Rules/Generics/TemplateTypeCheck.php

		-
			rawMessage: 'Function class_implements() is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine. Use objects retrieved from ReflectionProvider instead.'
			identifier: phpstanApi.runtimeReflection
			count: 1
			path: src/Rules/LazyRegistry.php

		-
			rawMessage: 'Function class_parents() is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine. Use objects retrieved from ReflectionProvider instead.'
			identifier: phpstanApi.runtimeReflection
			count: 1
			path: src/Rules/LazyRegistry.php

		-
			rawMessage: 'Method PHPStan\Rules\LazyRegistry::getRulesFromContainer() return type with generic interface PHPStan\Rules\Rule does not specify its types: TNodeType'
			identifier: missingType.generics
			count: 1
			path: src/Rules/LazyRegistry.php

		-
			rawMessage: 'Property PHPStan\Rules\LazyRegistry::$cache with generic interface PHPStan\Rules\Rule does not specify its types: TNodeType'
			identifier: missingType.generics
			count: 1
			path: src/Rules/LazyRegistry.php

		-
			rawMessage: 'Property PHPStan\Rules\LazyRegistry::$rules with generic interface PHPStan\Rules\Rule does not specify its types: TNodeType'
			identifier: missingType.generics
			count: 1
			path: src/Rules/LazyRegistry.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ArrayType is error-prone and deprecated. Use Type::isArray() or Type::getArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Rules/Methods/MethodParameterComparisonHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Rules/Methods/MethodParameterComparisonHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\IterableType is error-prone and deprecated. Use Type::isIterable() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Rules/Methods/MethodParameterComparisonHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Generic\GenericClassStringType is error-prone and deprecated. Use Type::isClassStringType() and Type::getClassStringObjectType() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Rules/Methods/StaticMethodCallCheck.php

		-
			rawMessage: Doing instanceof PHPStan\Type\Generic\GenericObjectType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Rules/PhpDoc/VarTagTypeRuleHelper.php

		-
			rawMessage: Access to an undefined property T of PHPStan\Rules\RuleError::$tip.
			identifier: property.notFound
			count: 2
			path: src/Rules/RuleErrorBuilder.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Rules/RuleLevelHelper.php

		-
			rawMessage: 'Call to function method_exists() with ''PHPUnit\\Framework\\TestCase'' and ''assertFileDoesNotEx…'' will always evaluate to true.'
			identifier: function.alreadyNarrowedType
			count: 1
			path: src/Testing/LevelsTestCase.php

		-
			rawMessage: Catching internal class PHPUnit\Framework\AssertionFailedError.
			identifier: catch.internalClass
			count: 2
			path: src/Testing/LevelsTestCase.php

		-
			rawMessage: 'Return type of method PHPStan\Testing\LevelsTestCase::compareFiles() has typehint with internal class PHPUnit\Framework\AssertionFailedError.'
			identifier: return.internalClass
			count: 1
			path: src/Testing/LevelsTestCase.php

		-
			rawMessage: Anonymous function has an unused use $container.
			identifier: closure.unusedUse
			count: 1
			path: src/Testing/PHPStanTestCase.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Testing/TypeInferenceTestCase.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/AccessoryArrayListType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/AccessoryLiteralStringType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/AccessoryLowercaseStringType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/AccessoryNonEmptyStringType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/AccessoryNonEmptyStringType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/AccessoryNonFalsyStringType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/AccessoryNumericStringType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/AccessoryNumericStringType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/AccessoryUppercaseStringType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/HasMethodType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/HasOffsetType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Accessory/HasOffsetValueType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Accessory/HasOffsetValueType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/HasOffsetValueType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/HasPropertyType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/NonEmptyArrayType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Accessory/OversizedArrayType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ArrayType is error-prone and deprecated. Use Type::isArray() or Type::getArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/ArrayType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/ArrayType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/ArrayType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/ArrayType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\BooleanType is error-prone and deprecated. Use Type::isBoolean() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/BooleanType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/BooleanType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\CallableType is error-prone and deprecated. Use Type::isCallable() and Type::getCallableParametersAcceptors() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Type/CallableType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/CallableType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/ClosureType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ArrayType is error-prone and deprecated. Use Type::isArray() or Type::getArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Constant/ConstantArrayType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Constant/ConstantArrayType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 6
			path: src/Type/Constant/ConstantArrayType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Constant/ConstantArrayType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Constant/ConstantArrayType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Constant/ConstantArrayTypeBuilder.php

		-
			rawMessage: PHPDoc tag @var assumes the expression with type PHPStan\Type\Type is always PHPStan\Type\Constant\ConstantIntegerType|PHPStan\Type\Constant\ConstantStringType but it's error-prone and dangerous.
			identifier: phpstanApi.varTagAssumption
			count: 2
			path: src/Type/Constant/ConstantArrayTypeBuilder.php

		-
			rawMessage: PHPDoc tag @var with type float|int is not subtype of native type int.
			identifier: varTag.nativeType
			count: 2
			path: src/Type/Constant/ConstantArrayTypeBuilder.php

		-
			rawMessage: PHPDoc tag @var with type float|int is not subtype of type int.
			identifier: varTag.type
			count: 1
			path: src/Type/Constant/ConstantArrayTypeBuilder.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\BooleanType is error-prone and deprecated. Use Type::isBoolean() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Constant/ConstantBooleanType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Type/Constant/ConstantBooleanType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Constant/ConstantBooleanType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Type/Constant/ConstantFloatType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\FloatType is error-prone and deprecated. Use Type::isFloat() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Constant/ConstantFloatType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Type/Constant/ConstantIntegerType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\IntegerType is error-prone and deprecated. Use Type::isInteger() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Constant/ConstantIntegerType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ClassStringType is error-prone and deprecated. Use Type::isClassStringType() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Constant/ConstantStringType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Type/Constant/ConstantStringType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Type/Constant/ConstantStringType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Generic\GenericClassStringType is error-prone and deprecated. Use Type::isClassStringType() and Type::getClassStringObjectType() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Constant/ConstantStringType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\StringType is error-prone and deprecated. Use Type::isString() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Constant/ConstantStringType.php

		-
			rawMessage: PHPDoc tag @var with type int|string is not subtype of type string.
			identifier: varTag.type
			count: 1
			path: src/Type/Constant/ConstantStringType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Constant/OversizedArrayBuilder.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Enum\EnumCaseObjectType is error-prone and deprecated. Use Type::getEnumCases() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Enum/EnumCaseObjectType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/ExponentiateHelper.php

		-
			rawMessage: Doing instanceof PHPStan\Type\Generic\GenericObjectType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/FileTypeMapper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\FloatType is error-prone and deprecated. Use Type::isFloat() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/FloatType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ClassStringType is error-prone and deprecated. Use Type::isClassStringType() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/GenericClassStringType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Type/Generic/GenericClassStringType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Generic\GenericClassStringType is error-prone and deprecated. Use Type::isClassStringType() and Type::getClassStringObjectType() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Type/Generic/GenericClassStringType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/GenericClassStringType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\StringType is error-prone and deprecated. Use Type::isString() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Generic/GenericClassStringType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\Generic\GenericObjectType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/GenericObjectType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/GenericObjectType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectType is error-prone and deprecated. Use Type::isObject() or Type::getObjectClassNames() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/GenericObjectType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\TypeWithClassName is error-prone and deprecated. Use Type::getObjectClassNames() or Type::getObjectClassReflections() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Generic/GenericObjectType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectType is error-prone and deprecated. Use Type::isObject() or Type::getObjectClassNames() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/GenericStaticType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\TypeWithClassName is error-prone and deprecated. Use Type::getObjectClassNames() or Type::getObjectClassReflections() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/GenericStaticType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateArrayType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateBenevolentUnionType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateBooleanType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateConstantArrayType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateConstantIntegerType.php

		-
			rawMessage: 'Method PHPStan\Type\Generic\TemplateConstantIntegerType::toPhpDocNode() should return PHPStan\PhpDocParser\Ast\Type\ConstTypeNode but returns PHPStan\PhpDocParser\Ast\Type\IdentifierTypeNode.'
			identifier: return.type
			count: 1
			path: src/Type/Generic/TemplateConstantIntegerType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateConstantStringType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateFloatType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateGenericObjectType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateIntegerType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateIntersectionType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateIterableType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateKeyOfType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Generic/TemplateMixedType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateNullType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateObjectShapeType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateObjectType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateObjectWithoutClassType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Generic/TemplateStrictMixedType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateStringType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ArrayType is error-prone and deprecated. Use Type::isArray() or Type::getArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/TemplateTypeFactory.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\BooleanType is error-prone and deprecated. Use Type::isBoolean() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/TemplateTypeFactory.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/TemplateTypeFactory.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/TemplateTypeFactory.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\FloatType is error-prone and deprecated. Use Type::isFloat() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/TemplateTypeFactory.php

		-
			rawMessage: Doing instanceof PHPStan\Type\Generic\GenericObjectType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/TemplateTypeFactory.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\IntegerType is error-prone and deprecated. Use Type::isInteger() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/TemplateTypeFactory.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/TemplateTypeFactory.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\IterableType is error-prone and deprecated. Use Type::isIterable() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/TemplateTypeFactory.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\NullType is error-prone and deprecated. Use Type::isNull() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/TemplateTypeFactory.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectShapeType is error-prone and deprecated. Use Type::isObject() and Type::hasProperty() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/TemplateTypeFactory.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectType is error-prone and deprecated. Use Type::isObject() or Type::getObjectClassNames() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/TemplateTypeFactory.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectWithoutClassType is error-prone and deprecated. Use Type::isObject() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/TemplateTypeFactory.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\StringType is error-prone and deprecated. Use Type::isString() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Generic/TemplateTypeFactory.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/Generic/TemplateUnionType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/IntegerRangeType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\IntegerType is error-prone and deprecated. Use Type::isInteger() instead.'
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/IntegerRangeType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/IntegerRangeType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\IntegerType is error-prone and deprecated. Use Type::isInteger() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/IntegerType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ArrayType is error-prone and deprecated. Use Type::isArray() or Type::getArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Type/IntersectionType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\BooleanType is error-prone and deprecated. Use Type::isBoolean() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/IntersectionType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\CallableType is error-prone and deprecated. Use Type::isCallable() and Type::getCallableParametersAcceptors() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/IntersectionType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/IntersectionType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/IntersectionType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Type/IntersectionType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/IterableType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\IterableType is error-prone and deprecated. Use Type::isIterable() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/IterableType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/NullType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\NullType is error-prone and deprecated. Use Type::isNull() instead.'
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/NullType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/ObjectShapeType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectShapeType is error-prone and deprecated. Use Type::isObject() and Type::hasProperty() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/ObjectShapeType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectWithoutClassType is error-prone and deprecated. Use Type::isObject() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/ObjectShapeType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Enum\EnumCaseObjectType is error-prone and deprecated. Use Type::getEnumCases() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/ObjectType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\Generic\GenericObjectType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/ObjectType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectType is error-prone and deprecated. Use Type::isObject() or Type::getObjectClassNames() instead.'
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/ObjectType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectWithoutClassType is error-prone and deprecated. Use Type::isObject() instead.'
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/ObjectType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectShapeType is error-prone and deprecated. Use Type::isObject() and Type::hasProperty() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/ObjectWithoutClassType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectWithoutClassType is error-prone and deprecated. Use Type::isObject() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Type/ObjectWithoutClassType.php

		-
			rawMessage: Creating new ReflectionClass is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine. Use objects retrieved from ReflectionProvider instead.
			identifier: phpstanApi.runtimeReflection
			count: 1
			path: src/Type/PHPStan/ClassNameUsageLocationCreateIdentifierDynamicReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Php/ArrayCombineFunctionReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/ArrayCombineFunctionReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/ArrayKeyExistsFunctionTypeSpecifyingExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 16
			path: src/Type/Php/BcMathStringOrNullReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/ClassExistsFunctionTypeSpecifyingExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/CompactFunctionReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/CompactFunctionReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/DefineConstantTypeSpecifyingExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/DefinedConstantTypeSpecifyingExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\TypeWithClassName is error-prone and deprecated. Use Type::getObjectClassNames() or Type::getObjectClassReflections() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/DsMapDynamicReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Php/FilterFunctionReturnTypeHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/FilterFunctionReturnTypeHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/FunctionExistsFunctionTypeSpecifyingExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/IsAFunctionTypeSpecifyingExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Generic\GenericClassStringType is error-prone and deprecated. Use Type::isClassStringType() and Type::getClassStringObjectType() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Php/IsSubclassOfFunctionTypeSpecifyingExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/JsonThrowOnErrorDynamicReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/JsonThrowOnErrorDynamicReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/MbSubstituteCharacterDynamicReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/MethodExistsTypeSpecifyingExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Php/MinMaxFunctionReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Php/MinMaxFunctionReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/NumberFormatFunctionDynamicReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/NumberFormatFunctionDynamicReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Php/PropertyExistsTypeSpecifyingExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/Php/RangeFunctionReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/ReflectionMethodConstructorThrowTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Generic\GenericClassStringType is error-prone and deprecated. Use Type::isClassStringType() and Type::getClassStringObjectType() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/ReflectionMethodConstructorThrowTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/SscanfFunctionDynamicReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/Php/StrRepeatFunctionReturnTypeExtension.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectType is error-prone and deprecated. Use Type::isObject() or Type::getObjectClassNames() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/StaticType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectWithoutClassType is error-prone and deprecated. Use Type::isObject() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/StaticType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/StringType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\StringType is error-prone and deprecated. Use Type::isString() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/StringType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ArrayType is error-prone and deprecated. Use Type::isArray() or Type::getArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 5
			path: src/Type/TypeCombinator.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\CallableType is error-prone and deprecated. Use Type::isCallable() and Type::getCallableParametersAcceptors() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/TypeCombinator.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 16
			path: src/Type/TypeCombinator.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 5
			path: src/Type/TypeCombinator.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Generic\GenericClassStringType is error-prone and deprecated. Use Type::isClassStringType() and Type::getClassStringObjectType() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/TypeCombinator.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/TypeCombinator.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\IterableType is error-prone and deprecated. Use Type::isIterable() instead.'
			identifier: phpstanApi.instanceofType
			count: 8
			path: src/Type/TypeCombinator.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\NullType is error-prone and deprecated. Use Type::isNull() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/TypeCombinator.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ObjectShapeType is error-prone and deprecated. Use Type::isObject() and Type::hasProperty() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/TypeCombinator.php

		-
			rawMessage: Instanceof between PHPStan\Type\Constant\ConstantIntegerType and PHPStan\Type\Constant\ConstantIntegerType will always evaluate to true.
			identifier: instanceof.alwaysTrue
			count: 1
			path: src/Type/TypeCombinator.php

		-
			rawMessage: Result of || is always true.
			identifier: booleanOr.alwaysTrue
			count: 1
			path: src/Type/TypeCombinator.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/TypeUtils.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/TypeUtils.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ArrayType is error-prone and deprecated. Use Type::isArray() or Type::getArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 3
			path: src/Type/TypehintHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantArrayType is error-prone and deprecated. Use Type::getConstantArrays() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/TypehintHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\IterableType is error-prone and deprecated. Use Type::isIterable() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/TypehintHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\CallableType is error-prone and deprecated. Use Type::isCallable() and Type::getCallableParametersAcceptors() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/UnionType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Generic\GenericClassStringType is error-prone and deprecated. Use Type::isClassStringType() and Type::getClassStringObjectType() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/UnionType.php

		-
			rawMessage: Doing instanceof PHPStan\Type\IntersectionType is error-prone and deprecated.
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/UnionType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\IterableType is error-prone and deprecated. Use Type::isIterable() instead.'
			identifier: phpstanApi.instanceofType
			count: 1
			path: src/Type/UnionType.php

		-
			rawMessage: PHPDoc tag @var assumes the expression with type PHPStan\Type\Type is always PHPStan\Type\BooleanType but it's error-prone and dangerous.
			identifier: phpstanApi.varTagAssumption
			count: 1
			path: src/Type/UnionType.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\CallableType is error-prone and deprecated. Use Type::isCallable() and Type::getCallableParametersAcceptors() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/UnionTypeHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\ConstantScalarType is error-prone and deprecated. Use Type::isConstantScalarValue() or Type::getConstantScalarTypes() or Type::getConstantScalarValues() instead.'
			identifier: phpstanApi.instanceofType
			count: 4
			path: src/Type/UnionTypeHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantBooleanType is error-prone and deprecated. Use Type::isTrue() or Type::isFalse() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/UnionTypeHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\Constant\ConstantStringType is error-prone and deprecated. Use Type::getConstantStrings() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/UnionTypeHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\IntegerType is error-prone and deprecated. Use Type::isInteger() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/UnionTypeHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\NullType is error-prone and deprecated. Use Type::isNull() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/UnionTypeHelper.php

		-
			rawMessage: 'Doing instanceof PHPStan\Type\VoidType is error-prone and deprecated. Use Type::isVoid() instead.'
			identifier: phpstanApi.instanceofType
			count: 2
			path: src/Type/VoidType.php

		-
			rawMessage: Unreachable statement - code above always terminates.
			identifier: deadCode.unreachable
			count: 1
			path: tests/PHPStan/Analyser/AnalyserTest.php

		-
			rawMessage: 'Class PHPStan\Analyser\AnonymousClassNameRuleTest extends generic class PHPStan\Testing\RuleTestCase but does not specify its types: TRule'
			identifier: missingType.generics
			count: 1
			path: tests/PHPStan/Analyser/AnonymousClassNameRuleTest.php

		-
			rawMessage: 'Method PHPStan\Analyser\AnonymousClassNameRuleTest::getRule() return type with generic interface PHPStan\Rules\Rule does not specify its types: TNodeType'
			identifier: missingType.generics
			count: 1
			path: tests/PHPStan/Analyser/AnonymousClassNameRuleTest.php

		-
			rawMessage: 'Class PHPStan\Analyser\EvaluationOrderTest extends generic class PHPStan\Testing\RuleTestCase but does not specify its types: TRule'
			identifier: missingType.generics
			count: 1
			path: tests/PHPStan/Analyser/EvaluationOrderTest.php

		-
			rawMessage: 'Method PHPStan\Analyser\EvaluationOrderTest::getRule() return type with generic interface PHPStan\Rules\Rule does not specify its types: TNodeType'
			identifier: missingType.generics
			count: 1
			path: tests/PHPStan/Analyser/EvaluationOrderTest.php

		-
			rawMessage: Constant SOME_CONSTANT_IN_AUTOLOAD_FILE not found.
			identifier: constant.notFound
			count: 1
			path: tests/PHPStan/Command/AnalyseCommandTest.php

		-
			rawMessage: 'Class PHPStan\Node\FileNodeTest extends generic class PHPStan\Testing\RuleTestCase but does not specify its types: TRule'
			identifier: missingType.generics
			count: 1
			path: tests/PHPStan/Node/FileNodeTest.php

		-
			rawMessage: 'Method PHPStan\Node\FileNodeTest::getRule() return type with generic interface PHPStan\Rules\Rule does not specify its types: TNodeType'
			identifier: missingType.generics
			count: 1
			path: tests/PHPStan/Node/FileNodeTest.php

		-
			rawMessage: Access to constant on internal class InternalAnnotations\InternalFoo.
			identifier: classConstant.internalClass
			count: 1
			path: tests/PHPStan/Reflection/Annotations/InternalAnnotationsTest.php

		-
			rawMessage: Access to constant on internal interface InternalAnnotations\InternalFooInterface.
			identifier: classConstant.internalInterface
			count: 1
			path: tests/PHPStan/Reflection/Annotations/InternalAnnotationsTest.php

		-
			rawMessage: Access to constant on internal trait InternalAnnotations\InternalFooTrait.
			identifier: classConstant.internalTrait
			count: 1
			path: tests/PHPStan/Reflection/Annotations/InternalAnnotationsTest.php

		-
			rawMessage: PHPDoc tag @var with type string is not subtype of type class-string.
			identifier: varTag.type
			count: 1
			path: tests/PHPStan/Reflection/BetterReflection/SourceLocator/OptimizedDirectorySourceLocatorTest.php

		-
			rawMessage: Creating new PHPStan\Php8StubsMap is not covered by backward compatibility promise. The class might change in a minor PHPStan version.
			identifier: phpstanApi.constructor
			count: 1
			path: tests/PHPStan/Reflection/ReflectionProviderGoldenTest.php

		-
			rawMessage: Creating new PHPStan\Php8StubsMap is not covered by backward compatibility promise. The class might change in a minor PHPStan version.
			identifier: phpstanApi.constructor
			count: 1
			path: tests/PHPStan/Reflection/SignatureMap/Php8SignatureMapProviderTest.php

		-
			rawMessage: Access to constant on internal class PHPUnit\Framework\AssertionFailedError.
			identifier: classConstant.internalClass
			count: 2
			path: tests/PHPStan/Testing/TypeInferenceTestCaseTest.php

		-
			rawMessage: Catching internal class PHPUnit\Framework\AssertionFailedError.
			identifier: catch.internalClass
			count: 1
			path: tests/PHPStan/Testing/TypeInferenceTestCaseTest.php

		-
			rawMessage: PHPDoc tag @var assumes the expression with type PHPStan\Type\Generic\TemplateType is always PHPStan\Type\Generic\TemplateMixedType but it's error-prone and dangerous.
			identifier: phpstanApi.varTagAssumption
			count: 1
			path: tests/PHPStan/Type/IterableTypeTest.php
